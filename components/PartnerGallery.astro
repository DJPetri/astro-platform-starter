---
---

<div id="gallery">
  <div class="gallery-skeleton">
    <div class="skeleton-card"></div>
    <div class="skeleton-card"></div>
    <div class="skeleton-card"></div>
  </div>
</div>

<style>
  .gallery-skeleton {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 1.5rem;
    margin-top: 2rem;
  }

  .skeleton-card {
    height: 200px;
    border-radius: 1.5rem;
    background: linear-gradient(90deg, #333 25%, #444 50%, #333 75%);
    background-size: 400% 100%;
    animation: loading 1.2s infinite;
  }

  @keyframes loading {
    0% {
      background-position: 100% 0;
    }
    100% {
      background-position: -100% 0;
    }
  }
</style>

<script type="module">
  function sleep(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
  }

  async function fetchPartnerUrls() {
    const res = await fetch('/data/partners.json');
    if (!res.ok) throw new Error('Partner-URLs konnten nicht geladen werden');
    return await res.json();
  }

  async function fetchMetadata(url) {
    try {
      const res = await fetch(`https://api.microlink.io/?url=${encodeURIComponent(url)}`);
      if (!res.ok) throw new Error('Microlink API Fehler');
      const { data } = await res.json();
      return {
        url,
        title: data.title || url,
        description: data.description || '',
        image: data.image?.url || '/fallback.png'
      };
    } catch {
      return {
        url,
        title: url,
        description: 'Keine Vorschau verfÃ¼gbar.',
        image: '/fallback.png'
      };
    }
  }

  async function loadGallery() {
    const gallery = document.getElementById('gallery');
    gallery.innerHTML = `
      <div class="gallery-skeleton">
        <div class="skeleton-card"></div>
        <div class="skeleton-card"></div>
        <div class="skeleton-card"></div>
      </div>
    `;

    try {
      const urls = await fetchPartnerUrls();

      // ðŸ•’ Hier ist die kÃ¼nstliche VerzÃ¶gerung zum Testen
      await sleep(1500);

      const cardsData = await Promise.all(urls.map(fetchMetadata));

      gallery.innerHTML = '';

      for (const { url, title, description, image } of cardsData) {
        const card = document.createElement('a');
        card.href = url;
        card.target = '_blank';
        card.className = 'gallery-card';
        card.innerHTML = `
          <img src="${image}" alt="${title}" />
          <h3>${title}</h3>
          <p>${description}</p>
        `;
        gallery.appendChild(card);
      }
    } catch (e) {
      gallery.textContent = 'Fehler beim Laden der Partner.';
      console.error(e);
    }
  }

  loadGallery();
</script>
